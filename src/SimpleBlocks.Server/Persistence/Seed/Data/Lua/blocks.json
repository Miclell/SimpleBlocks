{
  "blocks": [
    {
      "type": "Number",
      "message0": "%1",
      "args0": [
        { "type": "field_number", "name": "Value" }
      ],
      "output": "Number",
      "colour": 230
    },
    {
      "type": "String",
      "message0": "\"%1\"",
      "args0": [
        { "type": "field_input", "name": "Value" }
      ],
      "output": "String",
      "colour": 160
    },
    {
      "type": "Boolean",
      "message0": "%1",
      "args0": [
        {
          "type": "field_dropdown",
          "name": "Value",
          "options": [["true", "true"], ["false", "false"]]
        }
      ],
      "output": "Boolean",
      "colour": 210
    },
    {
      "type": "ArithmeticOperation",
      "message0": "%1 %2 %3",
      "args0": [
        { "type": "input_value", "name": "LeftOperand" },
        {
          "type": "field_dropdown",
          "name": "Operator",
          "options": [
            ["+", "+"],
            ["-", "-"],
            ["*", "*"],
            ["/", "/"],
            ["%", "%"]
          ]
        },
        { "type": "input_value", "name": "RightOperand" }
      ],
      "output": "Number",
      "colour": 180
    },
    {
      "type": "LogicalOperation",
      "message0": "%1 %2 %3",
      "args0": [
        { "type": "input_value", "name": "LeftOperand" },
        {
          "type": "field_dropdown",
          "name": "Operator",
          "options": [
            ["AND", "and"],
            ["OR", "or"]
          ]
        },
        { "type": "input_value", "name": "RightOperand" }
      ],
      "output": "Boolean",
      "colour": 210
    },
    {
      "type": "NotOperation",
      "message0": "NOT %1",
      "args0": [
        { "type": "input_value", "name": "Operand" }
      ],
      "output": "Boolean",
      "colour": 210
    },
    {
      "type": "ComparisonOperation",
      "message0": "%1 %2 %3",
      "args0": [
        { "type": "input_value", "name": "LeftOperand" },
        {
          "type": "field_dropdown",
          "name": "Operator",
          "options": [
            ["==", "=="],
            ["!=", "~="],
            ["<", "<"],
            ["<=", "<="],
            [">", ">"],
            [">=", ">="]
          ]
        },
        { "type": "input_value", "name": "RightOperand" }
      ],
      "output": "Boolean",
      "colour": 210
    },
    {
      "type": "IfStatement",
      "message0": "if %1 then %2 end",
      "args0": [
        { "type": "input_value", "name": "Condition" },
        { "type": "input_statement", "name": "Body" }
      ],
      "previousStatement": null,
      "nextStatement": null,
      "colour": 120
    },
    {
      "type": "IfElseStatement",
      "message0": "if %1 then %2 else %3 end",
      "args0": [
        { "type": "input_value", "name": "Condition" },
        { "type": "input_statement", "name": "IfBody" },
        { "type": "input_statement", "name": "ElseBody" }
      ],
      "previousStatement": null,
      "nextStatement": null,
      "colour": 120
    },
    {
      "type": "WhileLoop",
      "message0": "while %1 do %2 end",
      "args0": [
        { "type": "input_value", "name": "Condition" },
        { "type": "input_statement", "name": "Body" }
      ],
      "previousStatement": null,
      "nextStatement": null,
      "colour": 150
    },
    {
      "type": "ForLoop",
      "message0": "for %1 = %2, %3, %4 do %5 end",
      "args0": [
        { "type": "field_input", "name": "Variable" },
        { "type": "input_value", "name": "Start" },
        { "type": "input_value", "name": "End" },
        { "type": "input_value", "name": "Step", "check": "Number" },
        { "type": "input_statement", "name": "Body" }
      ],
      "previousStatement": null,
      "nextStatement": null,
      "colour": 150
    },
    {
      "type": "ForEachLoop",
      "message0": "for _, %1 in ipairs(%2) do %3 end",
      "args0": [
        { "type": "field_input", "name": "Item" },
        { "type": "input_value", "name": "List", "check": "Array" },
        { "type": "input_statement", "name": "Body" }
      ],
      "previousStatement": null,
      "nextStatement": null,
      "colour": 150
    },
    {
      "type": "PrintStatement",
      "message0": "print(%1)",
      "args0": [
        { "type": "input_value", "name": "Value" }
      ],
      "previousStatement": null,
      "nextStatement": null,
      "colour": 60
    },
    {
      "type": "InputStatement",
      "message0": "io.read()",
      "output": "String",
      "colour": 60
    },
    {
      "type": "VariableDeclaration",
      "message0": "local %1 = %2",
      "args0": [
        { "type": "field_input", "name": "Name" },
        { "type": "input_value", "name": "Value" }
      ],
      "previousStatement": null,
      "nextStatement": null,
      "colour": 30
    },
    {
      "type": "VariableAssignment",
      "message0": "%1 = %2",
      "args0": [
        { "type": "field_input", "name": "Name" },
        { "type": "input_value", "name": "Value" }
      ],
      "previousStatement": null,
      "nextStatement": null,
      "colour": 30
    },
    {
      "type": "ArrayDeclaration",
      "message0": "{ %1 }",
      "args0": [
        { "type": "input_value", "name": "Items", "check": ["Number", "String", "Boolean"] }
      ],
      "output": "Array",
      "colour": 270
    },
    {
      "type": "ArrayAddElement",
      "message0": "table.insert(%1, %2)",
      "args0": [
        { "type": "field_input", "name": "ArrayName" },
        { "type": "input_value", "name": "Value" }
      ],
      "previousStatement": null,
      "nextStatement": null,
      "colour": 270
    },
    {
      "type": "ArrayRemoveElement",
      "message0": "table.remove(%1, %2)",
      "args0": [
        { "type": "field_input", "name": "ArrayName" },
        { "type": "input_value", "name": "Index", "check": "Number" }
      ],
      "previousStatement": null,
      "nextStatement": null,
      "colour": 270
    },
    {
      "type": "ArrayIndexAccess",
      "message0": "%1[%2]",
      "args0": [
        { "type": "field_input", "name": "ArrayName" },
        { "type": "input_value", "name": "Index", "check": "Number" }
      ],
      "output": null,
      "colour": 270
    },
    {
      "type": "FunctionDefinition",
      "message0": "function %1(%2) %3 end",
      "args0": [
        { "type": "field_input", "name": "Name" },
        { "type": "field_input", "name": "Params" },
        { "type": "input_statement", "name": "Body" }
      ],
      "previousStatement": null,
      "nextStatement": null,
      "colour": 330
    },
    {
      "type": "FunctionCall",
      "message0": "%1(%2)",
      "args0": [
        { "type": "field_input", "name": "Name" },
        { "type": "input_value", "name": "Args" }
      ],
      "output": null,
      "colour": 330
    },
    {
      "type": "ReturnStatement",
      "message0": "return %1",
      "args0": [
        { "type": "input_value", "name": "Value" }
      ],
      "previousStatement": null,
      "colour": 330
    },
    {
      "type": "TryCatch",
      "message0": "local ok, err = pcall(function() %1 end) if not ok then %2 end",
      "args0": [
        { "type": "input_statement", "name": "TryBody" },
        { "type": "input_statement", "name": "CatchBody" }
      ],
      "previousStatement": null,
      "nextStatement": null,
      "colour": 200
    },
    {
      "type": "ThrowStatement",
      "message0": "error(%1)",
      "args0": [
        { "type": "input_value", "name": "Message" }
      ],
      "previousStatement": null,
      "nextStatement": null,
      "colour": 200
    },
    {
      "type": "CommentSingleLine",
      "message0": "-- %1",
      "args0": [
        { "type": "field_input", "name": "Text" }
      ],
      "previousStatement": null,
      "nextStatement": null,
      "colour": 90
    }
  ],
  "toolbox": [
    "<xml>",
    "  <category name='Data Types'>",
    "    <block type='Number'></block>",
    "    <block type='String'></block>",
    "    <block type='Boolean'></block>",
    "  </category>",
    "  <category name='Operators'>",
    "    <block type='ArithmeticOperation'></block>",
    "    <block type='LogicalOperation'></block>",
    "    <block type='NotOperation'></block>",
    "    <block type='ComparisonOperation'></block>",
    "  </category>",
    "  <category name='Control Flow'>",
    "    <block type='IfStatement'></block>",
    "    <block type='IfElseStatement'></block>",
    "    <block type='WhileLoop'></block>",
    "    <block type='ForLoop'></block>",
    "    <block type='ForEachLoop'></block>",
    "  </category>",
    "  <category name='I/O'>",
    "    <block type='PrintStatement'></block>",
    "    <block type='InputStatement'></block>",
    "  </category>",
    "  <category name='Variables'>",
    "    <block type='VariableDeclaration'></block>",
    "    <block type='VariableAssignment'></block>",
    "  </category>",
    "  <category name='Collections'>",
    "    <block type='ArrayDeclaration'></block>",
    "    <block type='ArrayAddElement'></block>",
    "    <block type='ArrayRemoveElement'></block>",
    "    <block type='ArrayIndexAccess'></block>",
    "  </category>",
    "  <category name='Functions'>",
    "    <block type='FunctionDefinition'></block>",
    "    <block type='FunctionCall'></block>",
    "    <block type='ReturnStatement'></block>",
    "  </category>",
    "  <category name='Error Handling'>",
    "    <block type='TryCatch'></block>",
    "    <block type='ThrowStatement'></block>",
    "  </category>",
    "  <category name='Comments'>",
    "    <block type='CommentSingleLine'></block>",
    "  </category>",
    "</xml>"
  ]
}